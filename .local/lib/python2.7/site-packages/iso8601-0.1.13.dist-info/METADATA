## The User Interface

Webots GUI is composed of four principal windows: the *3D window* that displays and allows you to interact with the 3D simulation, the *Scene tree* which is a hierarchical representation of the current world, the *Text editor* that allows you to edit source code, and finally, the *Console* that displays both compilation and controller outputs.

%figure "Webots GUI"

![main_window.png](images/main_window.thumbnail.jpg)

%end

The GUI has nine menus: `File, Edit, View, Simulation, Build, Overlays, Tools, Wizards` and `Help`.

### File Menu

The **File** menu allows you to perform usual file operations: loading, saving, etc.

- The **New World** menu item (and button) opens a new world in the simulation window containing only an [ElevationGrid](../reference/elevationgrid.md), displayed as a chessboard of 10 x 10 squares on a surface of 1 m x 1 m.

- ![](images/open-button.png =26x26) The **Open World...** menu item (and button) opens a file selection dialog that allows you to choose a ".wbt" file to load.

- The **Open Recent World** menu item gives the possibility of reopening a ".wbt" file that was opened recently by choosing it from the list displayed in the submenu.

- The **Open Sample World** menu item opens a dialog listing all the available sample worlds where it is possible to search for a specific ".wbt" file to load by entering the file name or part of it in the search field.

- ![](images/save-button.png =26x26) The **Save World** menu item (and button) saves the current world using the current filename (the filename that appears at the top of the main window).
On each `Save` the content of the ".wbt" file is overwritten and no backup copies are created by Webots, therefore you should use this button carefully and eventually do safety copies manually.

- The **Save World As...** menu item (and button) saves the current world with a new filename entered by the user.
Note that a ".wbt" file should always be saved in a Webots project directory, and in the "worlds" subdirectory, otherwise it will not be possible to reopen the file.

- ![](images/revert-button.png =26x26) The **Reload World** menu item (and button) reloads the current world from the saved version and restarts the simulation from the beginning.

    > **Note**:
When opening (or reloading) a world, if the world takes more than 2 seconds to
load a window will pop up and show the progression. Using this window it is
possible to cancel the loading of the world, in that case, the empty world will
be opened instead.

- ![](images/reset-simulation-button.png =26x26) The **Reset Simulation** menu item (and button) restores the initial state of the simulation.
The simulation is not entirely destroyed and reconstructed as with a reload, but the initial state of all nodes is restored, which is much faster.

    > **Note**:
In order to reset the simulation, the following steps are performed:
  - The simulation time is set to 00:00:00
  - All nodes added during the simulation are removed.
  - All sound sources are stopped.
  - The random seeds used by Webots internally are reset.
  - All the nodes are reset. This has the following implication depending on the node type:
    - **[Brake](../reference/brake.md)**: The brake is released.
    - **[Charger](../reference/charger.md)**: The `battery` field and the `emissiveColor` field of the [Material](../reference/material.md) node of the first [Shape](../reference/shape.md) child node are restored.
    - **[Connector](../reference/connector.md)**: If attached, the connector is detached and the value of the `isLocked` field is restored.
    - **[Display](../reference/display.md)**: The image is cleared.
    - **[Emitter](../reference/emitter.md)/[Receiver](../reference/receiver.md)**: The message queue is cleared.
    - **[Joint](../reference/joint.md)/[Motor](../reference/motor.md)**: The position, velocity, acceleration, available torque and available force are restored.
    - **[LED](../reference/led.md)**: If the first child is a Light node, it's `color` field is restored and it is switched off. If the first child is a [Shape](../reference/shape.md) node, the `emissiveColor` field of its [Material](../reference/material.md) node is restored.
    - **[Lidar](../reference/lidar.md)**: The position of the rotating head is restored.
    - **[Pen](../reference/pen.md)**: All the painted textures are cleaned.
    - **[Propeller](../reference/propeller.md)**: The slow helix and it's initial position are restored.
    - **[Robot](../reference/robot.md)**: The `battery` field is restored, all the supervisor labels are removed, the nodes visibility is restored and the controller is restarted.
    - **[Solid](../reference/solid.md)**: The `translation` and `rotation` fields are restored and the physics is reset.
    - **[Track](../reference/track.md)**: The motor position is restored and the `translation` field of the textureTransform node of the [Appearance](../reference/appearance.md) node of the first [Shape](../reference/shape.md) children node is restored.
    - **[Viewpoint](../reference/viewpoint.md)**: The `orientation` and `position` fields are restored.

- ![](images/new-button.png =26x26) The **New Text File** menu item (and button) opens an empty text file in the text editor.

- ![](images/open-button.png =26x26) The **Open Text File...** menu item (and button) opens a file selection dialog that allows you to choose a text file (for example a ".java" file) to load.

- ![](images/save-button.png =26x26) The **Save Text File** menu item (and button) saves the current text file.

- ![](images/save_as-button.png =26x26) The **Save Text File As...** menu item (and button) saves the current text file with a new filename entered by the user.

- The **Save All Text Files** menu item saves all the opened and unsaved text files.

- ![](images/revert-button.png =26x26) The **Revert Text File** menu item (and button) reloads the text file from the saved version.

- The **Print Preview...** menu item opens a window allowing you to manage the page layout in order to print files from the text editor.

- The **Print...** menu item opens a window allowing you to print the current file of the text editor.

- The **Import VRML97...** menu item adds VRML97 objects at the end of the scene tree.
These objects come from a VRML97 file you must specify.
This feature is useful for importing complex shapes that were modeled in a 3D modelling program, then exported to VRML97 (previously called VRML 2.0).
Most 3D modelling software, like 3D Studio Max, Maya, AutoCAD, Pro Engineer, AC3D, or Art Of Illusion, include the VRML97 (or VRML 2.0) export feature.
Be aware that Webots cannot import files in VRML 1.0 format.
Once imported, these objects appear as [Group](../reference/group.md), [Transform](../reference/transform.md) or [Shape](../reference/shape.md) nodes at the bottom of the scene tree.
You can then either turn these objects into Webots nodes (like [Solid](../reference/solid.md), [Robot](../reference/robot.md), etc.) or cut and paste them into the `children` list of existing Webots nodes.

- The **Export VRML97...** item allows you to save the currently loaded world as a ".wrl" file, conforming to the VRML97 standard.
Such a file can, in turn, be opened with any VRML97 viewer and most 3D modeling software.

- ![](images/screenshot-button.png =26x26) The **Take Screenshot...** item allows you to take a screenshot of the current view in Webots.
It opens a file dialog to save the current view as a PNG or JPG image.

- ![](images/movie-button.png =26x26) The **Make Movie...** item allows you to create MPEG movies (Linux and macOS) or AVI movies (Windows).
Once the movie recording is started, this item is changed in `Stop Movie...`.
During the recording, it is possible to change the runni